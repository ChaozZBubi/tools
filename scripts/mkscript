#!/bin/sh

if [ $# -lt 2 ]; then
    echo "Usage: "$(basename $0)" <type> <filename>"
    echo ""
    echo "Known types:"
    echo "  php, python"
    echo "  sh, bash, dash"
    echo "  c, cpp, h"
    echo "  html"
    exit 1
fi

type=$1
filename=$2
hwstring="Hello, World!"

if [ "$filename" = "-" ]; then
    filename=/dev/stdout
    hdef='CHANGE_ME'
else
    hfilename=`basename "$filename"`
    hdef=`echo "${hfilename%.*}" | tr '. ' '_' | tr '[:lower:]' '[:upper:]'`
fi


case $type in
    "php")
        echo -en "<?php\n\necho '$hwstring';\n\n?>" > $filename;;
    "python" | "python2" | "python3")
        echo -en "#!/usr/bin/env $type\n# -*- encoding: utf-8 -*-\n\nprint('$hwstring');\n" > $filename;;
    "hexchat")
        echo -en "\n" > $filename
        echo -en "__module_name__ = 'name'\n" >> $filename
        echo -en "__module_version__ = '0.1'\n" >> $filename
        echo -en "__module_description__ = 'desc'\n" >> $filename
        echo -en "\n" >> $filename
        echo -en "import hexchat\n" >> $filename
        echo -en "hexchat.emit_print('Generic Message',\n" >> $filename
        echo -en "    'Loading',\n" >> $filename
        echo -en "    '{} {} - {}'.format(\n" >> $filename
        echo -en "        __module_name__,\n" >> $filename
        echo -en "        __module_version__,\n" >> $filename
        echo -en "        __module_description__))\n" >> $filename;;
    "sh" | "bash" | "dash")
        echo -en "#!/bin/"$type"\n\necho '$hwstring'\n" > $filename;;
    "c")
        echo -en "#include <stdio.h>\n\nint main()\n{\n" > $filename
        echo -en '    printf("'$hwstring'\\n");\n' >> $filename
        echo -en '    return 0;\n' >> $filename
        echo -en '}\n' >> $filename;;
    "cpp" | "c++")
        echo -en "#include <iostream>\n\nint main()\n{\n" > $filename
        echo -en '    std::cout << "'$hwstring'" << std::endl;\n' >> $filename
        echo -en '    return 0;\n' >> $filename
        echo -en '}\n' >> $filename;;
    "h" | "hpp")
        echo -en '#ifndef '$hdef'\n#define '$hdef'\n\n\n#endif\n' > $filename;;
    "html")
        echo -en '<!DOCTYPE html>\n<html>\n<head>\n' > $filename
        echo -en '<title>'$hwstring'</title>\n' >> $filename
        echo -en '</head>\n<body>\n\n' >> $filename
        echo -en '<h1>'$hwstring'</h1>\n\n' >> $filename
        echo -en '</body>\n</html>\n' >> $filename;;
    "flask")

        # creates some init files for a python flask app.
        # also creates uwsgi.ini for uwsgi (used by nginx).
        echo $filename | grep -qE '.py$'
        if [ ! $? -eq 0 ]; then
            filename=$filename".py"
        fi

        echo -en "#!/usr/bin/env python\n# -*- encoding: utf-8 -*-\n\n" > $filename
        echo -en "from flask import Flask, Response\n" >> $filename
        echo -en "import models\n" >> $filename
        echo -en "from models import db\n" >> $filename
        echo -en "app = Flask(__name__)\n" >> $filename
        echo -en "app.config['SQLALCHEMY_DATABASE_URI'] = models.DB_STRING\n" >> $filename
        echo -en "app.config['SQLALCHEMY_ECHO'] = True\n" >> $filename
        echo -en "db.init_app(app)\n\n\n" >> $filename
        echo -en "@app.route('/')\ndef hello_world():\n    return 'Hello World ($filename)!'\n\n\n" >> $filename
        echo -en "if __name__ == '__main__':\n    app.debug = True\n    app.run(host='0.0.0.0', port=8000)\n" >> $filename

        echo -en "from flask import Flask\nfrom flask.ext.sqlalchemy import SQLAlchemy\n\n" > models.py
        echo -en "DB_FILENAME = './test.db'\nDB_STRING = 'sqlite:///{}'.format(DB_FILENAME)\ndb = SQLAlchemy()\n\n\n" >> models.py
        echo -en "class Test(db.Model):\n" >> models.py
        echo -en "    id = db.Column(db.Integer, primary_key=True)\n\n\n" >> models.py
        echo -en "if __name__ == '__main__':\n" >> models.py
        echo -en "    import os\n" >> models.py
        echo -en "    try:\n" >> models.py
        echo -en "        os.unlink(DB_FILENAME)\n" >> models.py
        echo -en "    except FileNotFoundError:\n" >> models.py
        echo -en "        pass\n" >> models.py
        echo -en "    app = Flask(__name__)\n" >> models.py
        echo -en "    app.config['SQLALCHEMY_ECHO'] = True\n" >> models.py
        echo -en "    app.config['SQLALCHEMY_DATABASE_URI'] = DB_STRING\n" >> models.py
        echo -en "    db.init_app(app)\n" >> models.py
        echo -en "    db.create_all(app=app)\n" >> models.py

        # sys.path.insert only needed if pythonpath not set (will be set in uwsgi.ini)
        echo -en "\n" > wsgi.py
        #echo -en "import sys\n" >> wsgi.py
        #echo -en "sys.path.insert(0, '"`pwd`"')\n\n" >> wsgi.py
        echo -en "from "${filename%.*}" import app as application\n" >> wsgi.py

        uwsgipid="/tmp/flask-"${filename%.*}".pid"
        uwsgisock="/tmp/flask-"${filename%.*}".sock"

        mkdir -p ./static/
        mkdir -p ./templates/

        echo -en "[uwsgi]\n" > uwsgi.ini
        echo -en "socket = "$uwsgisock"\n" >> uwsgi.ini
        echo -en "master = true\n" >> uwsgi.ini
        echo -en "processes = 4\n" >> uwsgi.ini
        echo -en "wsgi-file = wsgi.py\n" >> uwsgi.ini
        echo -en "daemonize = uwsgi.log\n" >> uwsgi.ini
        echo -en "#disable-logging = true\n" >> uwsgi.ini
        echo -en "pidfile = "$uwsgipid"\n" >> uwsgi.ini
        echo -en "chmod-socket = 666\n\n" >> uwsgi.ini
        echo -en "base = "`pwd`"\n" >> uwsgi.ini
        echo -en "pythonpath = %(base)\n" >> uwsgi.ini
        echo -en "module = wsgi\n\n" >> uwsgi.ini
        echo -en "[stop]\n" >> uwsgi.ini
        echo -en "stop = "$uwsgipid"\n\n" >> uwsgi.ini
        echo -en "[reload]\n" >> uwsgi.ini
        echo -en "reload = "$uwsgipid"\n" >> uwsgi.ini

esac
